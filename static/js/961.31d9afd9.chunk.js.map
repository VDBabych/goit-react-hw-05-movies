{"version":3,"file":"static/js/961.31d9afd9.chunk.js","mappings":"4QAKaA,EAAe,WAAO,IAAD,IAE1BC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAZAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAaJ,GAFf,OAEXK,EAFW,OAGjBN,EAAaM,GAHI,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GAToB,CAUrB,GAAE,CAACH,IACCF,EACL,OACE,iCACE,SAAC,KAAD,CAAMW,GAAIhB,EAAV,sBACA,4BACE,gBACEiB,IACEZ,EAAUa,aAAV,0CACmCb,EAAUa,aAE/CC,MAAO,IACPC,IAAI,YAEN,kCAAQf,EAAUgB,MAAlB,aAA4B,IAAIC,KAC9BjB,EAAUkB,cACVC,cAFF,QAGA,6CAAmBC,KAAKC,MAA+B,GAAzBrB,EAAUsB,cAAxC,QACA,sCACA,uBAAItB,EAAUuB,YACd,oCACA,wBACGvB,EAAUwB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpB,wBAAcA,GAALD,EADW,UAK1B,qDAEE,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAG,OAAOd,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMgB,GAAG,UAAUd,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,KAAD,SAIP,C,+LChEYiC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAU,kDAAmD,CAC9EC,OAAQ,CACJC,QAAS,sCAHY,uBACtBxB,EADsB,EACtBA,KADsB,kBAMtBA,GANsB,2CAAH,qDASjByB,EAAgB,mCAAG,WAAOC,GAAP,yFACPJ,EAAAA,EAAAA,IAAU,4CAA6C,CACxEC,OAAQ,CACJC,QAAS,mCACTG,SAAU,QACVC,KAAM,EACNC,eAAe,EACfH,MAAAA,KAPoB,uBACrB1B,EADqB,EACrBA,KADqB,kBAUrBA,GAVqB,2CAAH,sDAahBD,EAAY,mCAAG,WAAOJ,GAAP,yFACH2B,EAAAA,EAAAA,IAAA,6CAAgD3B,GAAW,CAC5E4B,OAAQ,CACJC,QAAS,mCACTG,SAAU,WAJM,uBACjB3B,EADiB,EACjBA,KADiB,kBAOjBA,GAPiB,2CAAH,sDAUZ8B,EAAW,mCAAG,WAAMnC,GAAN,yFACF2B,EAAAA,EAAAA,IAAA,6CAAgD3B,EAAhD,YAAmE,CACpF4B,OAAQ,CACJC,QAAS,mCACTG,SAAU,WAJK,uBAChB3B,EADgB,EAChBA,KADgB,kBAOhBA,GAPgB,2CAAH,sDAUX+B,EAAc,mCAAG,WAAMpC,GAAN,yFACH2B,EAAAA,EAAAA,IAAA,6CAAgD3B,EAAhD,YAAmE,CACtF4B,OAAQ,CACJC,QAAS,mCACTG,SAAU,QACVC,KAAM,KALY,uBAClB5B,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","services/apiRequests.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/apiRequests';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const [movieData, setMovieData] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const effectAction = async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovieData(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    effectAction();\n  }, [movieId]);\n  if (!movieData) return;\n  return (\n    <>\n      <Link to={backLinkHref}>Go back</Link>\n      <div>\n        <img\n          src={\n            movieData.poster_path &&\n            `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n          }\n          width={250}\n          alt=\"poster\"\n        />\n        <h2>{`${movieData.title} (${new Date(\n          movieData.release_date\n        ).getFullYear()})`}</h2>\n        <p>{`User score: ${Math.round(movieData.vote_average * 10)}%`}</p>\n        <h3>Owerview</h3>\n        <p>{movieData.overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {movieData.genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        Additional information\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n","import axios from \"axios\"\n\nexport const getTrendingMovies = async () => {\n    const {data} = await axios.get('https://api.themoviedb.org/3/trending/movie/day', {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5'\n        }\n    })\n    return data\n}\n\nexport const getMoviesByQuery = async (query) => {\n    const {data} = await axios.get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n            page: 1,\n            include_adult: false,\n            query\n        }\n    })\n    return data\n}\n\nexport const getMovieById = async (movieId) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n        }\n    })\n    return data\n}\n\nexport const getCastById = async(movieId) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n        }\n    })\n    return data\n}\n\nexport const getReviewsById = async(movieId) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n            page: 1\n        }\n    })\n    return data\n}"],"names":["MovieDetails","backLinkHref","useLocation","state","from","useState","movieData","setMovieData","movieId","useParams","useEffect","effectAction","getMovieById","data","console","log","message","to","src","poster_path","width","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","id","name","getTrendingMovies","axios","params","api_key","getMoviesByQuery","query","language","page","include_adult","getCastById","getReviewsById"],"sourceRoot":""}