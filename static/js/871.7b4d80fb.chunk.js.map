{"version":3,"file":"static/js/871.7b4d80fb.chunk.js","mappings":"+PAKaA,EAAU,WACrB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAZAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAeJ,GAFjB,OAEXK,EAFW,OAGjBN,EAAc,OAACM,QAAD,IAACA,OAAD,EAACA,EAAMC,SAHJ,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBN,GAToB,CAUrB,GAAE,CAACH,IACCF,EACL,OAA2B,IAAvBA,EAAYY,QACP,gDAGP,wBACGZ,EAAYa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,0CAAgBD,MAChB,uBAAIC,MAFGF,EADM,KAQtB,C,+LChCYG,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAU,kDAAmD,CAC9EC,OAAQ,CACJC,QAAS,sCAHY,uBACtBb,EADsB,EACtBA,KADsB,kBAMtBA,GANsB,2CAAH,qDASjBc,EAAgB,mCAAG,WAAOC,GAAP,yFACPJ,EAAAA,EAAAA,IAAU,4CAA6C,CACxEC,OAAQ,CACJC,QAAS,mCACTG,SAAU,QACVC,KAAM,EACNC,eAAe,EACfH,MAAAA,KAPoB,uBACrBf,EADqB,EACrBA,KADqB,kBAUrBA,GAVqB,2CAAH,sDAahBmB,EAAY,mCAAG,WAAOxB,GAAP,yFACHgB,EAAAA,EAAAA,IAAA,6CAAgDhB,GAAW,CAC5EiB,OAAQ,CACJC,QAAS,mCACTG,SAAU,WAJM,uBACjBhB,EADiB,EACjBA,KADiB,kBAOjBA,GAPiB,2CAAH,sDAUZoB,EAAW,mCAAG,WAAMzB,GAAN,yFACFgB,EAAAA,EAAAA,IAAA,6CAAgDhB,EAAhD,YAAmE,CACpFiB,OAAQ,CACJC,QAAS,mCACTG,SAAU,WAJK,uBAChBhB,EADgB,EAChBA,KADgB,kBAOhBA,GAPgB,2CAAH,sDAUXD,EAAc,mCAAG,WAAMJ,GAAN,yFACHgB,EAAAA,EAAAA,IAAA,6CAAgDhB,EAAhD,YAAmE,CACtFiB,OAAQ,CACJC,QAAS,mCACTG,SAAU,QACVC,KAAM,KALY,uBAClBjB,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,qD","sources":["pages/Reviews/Reviews.jsx","services/apiRequests.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from 'services/apiRequests';\n\nexport const Reviews = () => {\n  const [reviewsData, setReviewsData] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const effectAction = async () => {\n      try {\n        const data = await getReviewsById(movieId);\n        setReviewsData(data?.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    effectAction();\n  }, [movieId]);\n  if (!reviewsData) return;\n  if (reviewsData.length === 0) {\n    return <p>There is no reviews</p>;\n  }\n  return (\n    <ul>\n      {reviewsData.map(({ id, author, content }) => (\n        <li key={id}>\n          <h5>{`Author: ${author}`}</h5>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import axios from \"axios\"\n\nexport const getTrendingMovies = async () => {\n    const {data} = await axios.get('https://api.themoviedb.org/3/trending/movie/day', {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5'\n        }\n    })\n    return data\n}\n\nexport const getMoviesByQuery = async (query) => {\n    const {data} = await axios.get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n            page: 1,\n            include_adult: false,\n            query\n        }\n    })\n    return data\n}\n\nexport const getMovieById = async (movieId) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n        }\n    })\n    return data\n}\n\nexport const getCastById = async(movieId) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n        }\n    })\n    return data\n}\n\nexport const getReviewsById = async(movieId) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n            page: 1\n        }\n    })\n    return data\n}"],"names":["Reviews","useState","reviewsData","setReviewsData","movieId","useParams","useEffect","effectAction","getReviewsById","data","results","console","log","message","length","map","id","author","content","getTrendingMovies","axios","params","api_key","getMoviesByQuery","query","language","page","include_adult","getMovieById","getCastById"],"sourceRoot":""}