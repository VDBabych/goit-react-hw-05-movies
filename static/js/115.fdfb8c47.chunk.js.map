{"version":3,"file":"static/js/115.fdfb8c47.chunk.js","mappings":"4PAKaA,EAAO,WAClB,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAZAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAYJ,GAFd,OAEXK,EAFW,OAGjBN,EAAW,OAACM,QAAD,IAACA,OAAD,EAACA,EAAMC,MAHD,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBN,GAToB,CAUrB,GAAE,CAACH,IACCF,EACL,OAAwB,IAApBA,EAASY,QACJ,yDAGP,wBACGZ,EAASa,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,aAA7B,OACZ,2BACE,gBACEC,IACED,GAAY,0CAAuCA,GAErDE,MAAO,IACPC,IAAI,YAEN,wBAAKJ,KACL,4CAAkBD,OATXD,EADG,KAenB,C,+LCvCYO,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAU,kDAAmD,CAC9EC,OAAQ,CACJC,QAAS,sCAHY,uBACtBjB,EADsB,EACtBA,KADsB,kBAMtBA,GANsB,2CAAH,qDASjBkB,EAAgB,mCAAG,WAAOC,GAAP,yFACPJ,EAAAA,EAAAA,IAAU,4CAA6C,CACxEC,OAAQ,CACJC,QAAS,mCACTG,SAAU,QACVC,KAAM,EACNC,eAAe,EACfH,MAAAA,KAPoB,uBACrBnB,EADqB,EACrBA,KADqB,kBAUrBA,GAVqB,2CAAH,sDAahBuB,EAAY,mCAAG,WAAO5B,GAAP,yFACHoB,EAAAA,EAAAA,IAAA,6CAAgDpB,GAAW,CAC5EqB,OAAQ,CACJC,QAAS,mCACTG,SAAU,WAJM,uBACjBpB,EADiB,EACjBA,KADiB,kBAOjBA,GAPiB,2CAAH,sDAUZD,EAAW,mCAAG,WAAMJ,GAAN,yFACFoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,YAAmE,CACpFqB,OAAQ,CACJC,QAAS,mCACTG,SAAU,WAJK,uBAChBpB,EADgB,EAChBA,KADgB,kBAOhBA,GAPgB,2CAAH,sDAUXwB,EAAc,mCAAG,WAAM7B,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,YAAmE,CACtFqB,OAAQ,CACJC,QAAS,mCACTG,SAAU,QACVC,KAAM,KALY,uBAClBrB,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,qD","sources":["pages/Cast/Cast.jsx","services/apiRequests.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from 'services/apiRequests';\n\nexport const Cast = () => {\n  const [castData, setCastData] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const effectAction = async () => {\n      try {\n        const data = await getCastById(movieId);\n        setCastData(data?.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    effectAction();\n  }, [movieId]);\n  if (!castData) return;\n  if (castData.length === 0) {\n    return <p>There is no cast information</p>;\n  }\n  return (\n    <ul>\n      {castData.map(({ cast_id, character, name, profile_path }) => (\n        <li key={cast_id}>\n          <img\n            src={\n              profile_path && `https://image.tmdb.org/t/p/w500/${profile_path}`\n            }\n            width={250}\n            alt=\"poster\"\n          />\n          <h5>{name}</h5>\n          <p>{`Character: ${character}`}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import axios from \"axios\"\n\nexport const getTrendingMovies = async () => {\n    const {data} = await axios.get('https://api.themoviedb.org/3/trending/movie/day', {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5'\n        }\n    })\n    return data\n}\n\nexport const getMoviesByQuery = async (query) => {\n    const {data} = await axios.get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n            page: 1,\n            include_adult: false,\n            query\n        }\n    })\n    return data\n}\n\nexport const getMovieById = async (movieId) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n        }\n    })\n    return data\n}\n\nexport const getCastById = async(movieId) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n        }\n    })\n    return data\n}\n\nexport const getReviewsById = async(movieId) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n        params: {\n            api_key: '9cda16d98a6e510af2decf0d66e8e7d5',\n            language: 'en-US',\n            page: 1\n        }\n    })\n    return data\n}"],"names":["Cast","useState","castData","setCastData","movieId","useParams","useEffect","effectAction","getCastById","data","cast","console","log","message","length","map","cast_id","character","name","profile_path","src","width","alt","getTrendingMovies","axios","params","api_key","getMoviesByQuery","query","language","page","include_adult","getMovieById","getReviewsById"],"sourceRoot":""}